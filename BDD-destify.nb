(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     50984,       1029]
NotebookOptionsPosition[     49557,        996]
NotebookOutlinePosition[     49904,       1011]
CellTagsIndexPosition[     49861,       1008]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Destify", "Section",
 CellChangeTimes->{{3.7326372972730474`*^9, 
  3.7326372996741867`*^9}},ExpressionUUID->"de067407-d071-4b33-8446-\
68a6a65c2de7"],

Cell["Performances to check. ", "Text",
 CellChangeTimes->{{3.738335831100685*^9, 
  3.7383358416276445`*^9}},ExpressionUUID->"42931878-d270-4fab-9f64-\
ea8212a1c072"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PrimeSets", "[", "sets_", "]"}], ":=", 
  RowBox[{"DeleteDuplicates", "[", 
   RowBox[{
    RowBox[{"SortBy", "[", 
     RowBox[{"sets", ",", "Length"}], "]"}], ",", 
    RowBox[{
     RowBox[{"SubsetQ", "[", 
      RowBox[{"#2", ",", "#1"}], "]"}], "&"}]}], "]"}]}]], "Input",ExpressionU\
UID->"fc69d44d-0919-4230-8bc5-778dcb22e925"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "TSCore", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TSCore", "::", "usage"}], "=", 
  "\"\<TSCore[TS struct] computes the core from a TS representation.\>\""}], \
"\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TSCore", "[", 
    RowBox[{"TermsSet", "[", 
     RowBox[{"0", ",", "_Association"}], "]"}], "]"}], ":=", 
   RowBox[{"{", "}"}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TSCore", "[", 
   RowBox[{"TermsSet", "[", 
    RowBox[{"1", ",", "_Association"}], "]"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"{", "}"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TSCore", "[", 
   RowBox[{"TermsSet", "[", 
    RowBox[{"root_Integer", ",", "ts_Association"}], "]"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"desc", "=", 
      RowBox[{"FindNode", "[", 
       RowBox[{"ts", ",", "root"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"low", "=", 
         RowBox[{"TSCore", "[", 
          RowBox[{"TermsSet", "[", 
           RowBox[{
            RowBox[{"desc", "[", 
             RowBox[{"[", "LOW", "]"}], "]"}], ",", "ts"}], "]"}], "]"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"high", "=", 
         RowBox[{"TSCore", "[", 
          RowBox[{"TermsSet", "[", 
           RowBox[{
            RowBox[{"desc", "[", 
             RowBox[{"[", "HIGH", "]"}], "]"}], ",", "ts"}], "]"}], "]"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"none", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"desc", "[", 
             RowBox[{"[", "HIGH", "]"}], "]"}], "\[Equal]", 
            RowBox[{"desc", "[", 
             RowBox[{"[", "NONE", "]"}], "]"}]}], ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"TSCore", "[", 
            RowBox[{"TermsSet", "[", 
             RowBox[{
              RowBox[{"desc", "[", 
               RowBox[{"[", "NONE", "]"}], "]"}], ",", "ts"}], "]"}], "]"}]}],
           "]"}]}]}], "}"}], ",", 
      RowBox[{"PrimeSets", "@", " ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Prepend", "[", 
            RowBox[{"#", ",", 
             RowBox[{"desc", "[", 
              RowBox[{"[", "VAR", "]"}], "]"}]}], "]"}], "&"}], "/@", "low"}],
          ",", "none", " ", ",", "high"}], "]"}]}]}], "]"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7383248863464956`*^9, 3.7383249088595495`*^9}, {
   3.7383249480394487`*^9, 3.7383249490182524`*^9}, 3.738325450168264*^9, {
   3.738325622235042*^9, 3.7383259413676033`*^9}, {3.73832599774645*^9, 
   3.738326079443157*^9}, {3.7383261451158905`*^9, 3.738326209937004*^9}, {
   3.738326252155303*^9, 3.738326281733757*^9}, {3.73832631263132*^9, 
   3.738326384565797*^9}, {3.738326464616888*^9, 3.7383267209920597`*^9}, {
   3.738326752586815*^9, 3.7383268486014338`*^9}, {3.7383271143914766`*^9, 
   3.7383271683239126`*^9}, {3.738327271991026*^9, 3.738327298622033*^9}, {
   3.7383273340160356`*^9, 3.7383273832991714`*^9}, {3.7383274546683025`*^9, 
   3.7383275206572046`*^9}, {3.738328969984935*^9, 3.7383289830687976`*^9}, {
   3.73832916627192*^9, 3.738329209948164*^9}, {3.7383292768203087`*^9, 
   3.738329313861063*^9}, {3.738329810567724*^9, 3.7383298405859833`*^9}, {
   3.7383298930545607`*^9, 3.738330020143471*^9}, {3.7383300604365835`*^9, 
   3.7383302822599335`*^9}, {3.7383303418967896`*^9, 
   3.7383303566906996`*^9}, {3.738330399752846*^9, 3.7383304468482604`*^9}, {
   3.7383305900576086`*^9, 3.7383306214107075`*^9}, {3.738330667239085*^9, 
   3.738330717326229*^9}, {3.738330989367277*^9, 3.738331002496425*^9}, {
   3.73833106370864*^9, 3.7383310752630634`*^9}, {3.738335461410833*^9, 
   3.7383354637665057`*^9}, {3.738335541766505*^9, 3.7383355481308336`*^9}, {
   3.738335654831313*^9, 3.7383356750686445`*^9}, {3.7383357936372843`*^9, 
   3.738335812493412*^9}, {3.738346228823208*^9, 3.7383462747687263`*^9}},
 CellLabel->
  "In[259]:=",ExpressionUUID->"7050d843-21df-4a6d-a286-9e32b6a15a74"],

Cell[CellGroupData[{

Cell["Dedicated BDD Build", "Subsection",
 CellChangeTimes->{{3.7329473083333206`*^9, 3.732947324198538*^9}, {
  3.732948384550891*^9, 
  3.7329483855226097`*^9}},ExpressionUUID->"8d2b797e-deae-4d94-8016-\
9f3d9be679f3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "BDDBuildForDestify", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDDBuildForDestify", "::", "usage"}], "=", 
  "\"\<BDDBuildForDestify[f, variable order list, ctrlq] build a BDD from a \
formula f dedicated to Destify. ctrlq is a predicate on variable determining \
whether a variable is a control. A control must be  followed by its opposite \
in the variable order without other control in between to get an optimized \
BDD.\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDDBuildForDestify", "[", 
   RowBox[{"f_", ",", "orderedvar_List", ",", "ctrlq_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"curtarget", ",", "\[IndentingNewLine]", 
      RowBox[{"nodecounter", "=", "1"}], ",", "\[IndentingNewLine]", 
      RowBox[{"bdd", "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"1", "\[Rule]", " ", "True"}], ",", 
         RowBox[{"0", "\[Rule]", " ", "False"}]}], "|>"}]}], ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "association", " ", "storing", " ", "the", " ", "BDD", " ", 
        "representation"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"bddinverted", "=", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"True", "\[Rule]", " ", "1"}], ",", 
         RowBox[{"False", "\[Rule]", " ", "0"}]}], "|>"}]}], ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "converse", " ", "association", " ", "to", " ", "fastly", " ", "find", 
        " ", "whether", " ", "a", " ", "node", " ", "was", " ", "already", 
        " ", "stored"}], " ", "*)"}], "\[IndentingNewLine]", "SubBuild", ",", 
      "\[IndentingNewLine]", "MakeNode"}], "\[IndentingNewLine]", "}"}], ",", 
    " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "recursive", " ", "sub", " ", "function", " ", "building", " ", "the", 
      " ", "BDD"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"MakeNode", "[", 
       RowBox[{"{", 
        RowBox[{"_", ",", "node_Integer", ",", "node_Integer"}], "}"}], "]"}],
       ":=", " ", "node"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"MakeNode", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"var_", "/;", 
            RowBox[{"ctrlq", "[", "var", "]"}]}], ",", "0", ",", "1"}], "}"}],
          "]"}], ":=", " ", "1"}], ";"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MakeNode", "[", "desc_List", "]"}], ":=", 
      "\[IndentingNewLine]", 
      RowBox[{"Lookup", "[", 
       RowBox[{"bddinverted", ",", 
        RowBox[{"Key", "[", "desc", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AssociateTo", "[", 
          RowBox[{"bdd", ",", 
           RowBox[{
            RowBox[{"++", "nodecounter"}], "\[Rule]", " ", "desc"}]}], "]"}], 
         " ", ";", 
         RowBox[{"AssociateTo", "[", 
          RowBox[{"bddinverted", ",", " ", 
           RowBox[{"desc", "\[Rule]", "nodecounter"}]}], "]"}], ";", 
         RowBox[{"++", "$BDDNODE"}], ";", "nodecounter"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SubBuild", "[", 
       RowBox[{"False", ",", "_", ",", "_"}], "]"}], ":=", "0"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SubBuild", "[", 
       RowBox[{"True", ",", "_", ",", "_"}], "]"}], ":=", "1"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SubBuild", "[", 
       RowBox[{"_", ",", 
        RowBox[{"{", "}"}], ",", "_"}], "]"}], ":=", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"bddmsg", "::", "missvar"}], ",", 
          RowBox[{"Complement", "[", 
           RowBox[{
            RowBox[{"BooleanVariables", "[", "f", "]"}], ",", "orderedvar"}], 
           "]"}]}], "]"}], ";", 
        RowBox[{"Abort", "[", "]"}]}], ")"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SubBuild", "[", 
       RowBox[{"formula_", ",", 
        RowBox[{"{", 
         RowBox[{"var_", ",", "varrest___"}], "}"}], ",", "target_"}], "]"}], 
      ":=", " ", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"ctrlq", "[", "var", "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{
         RowBox[{"curtarget", "=", 
          RowBox[{"First", "@", 
           RowBox[{"CtrlToAction", "[", "var", "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
            "When", " ", "a", " ", "target", " ", "is", " ", "different", " ",
              "to", " ", "Nothing", " ", "then", " ", "a", " ", "control", 
             " ", "on", " ", "target", " ", "was", " ", "already", " ", "met",
              " ", "*", "and", "*", " ", "set", " ", "to", " ", 
             RowBox[{"False", ".", " ", "If"}], " ", "curtarget"}], " ", "=", 
            " ", "target"}], ",", " ", 
           RowBox[{
           "this", " ", "control", " ", "is", " ", "the", " ", "converse", 
            " ", "of", " ", "the", " ", "previous", " ", "control", " ", 
            "already", " ", 
            RowBox[{"met", ".", " ", "As"}], " ", "both", " ", "cannot", " ", 
            "be", " ", "set", " ", "to", " ", "False"}], ",", " ", 
           RowBox[{
           "the", " ", "low", " ", "link", " ", "is", " ", "directed", " ", 
            "to", " ", "0"}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"target", " ", "=!=", " ", "Nothing"}], " ", "&&", " ", 
            RowBox[{"curtarget", "===", "target"}]}], " ", 
           "\[IndentingNewLine]", ",", 
           RowBox[{"MakeNode", "[", 
            RowBox[{"{", 
             RowBox[{"var", ",", "0", ",", 
              RowBox[{"SubBuild", "[", 
               RowBox[{
                RowBox[{"formula", "/.", 
                 RowBox[{"var", "\[Rule]", "True"}]}], ",", 
                RowBox[{"{", "varrest", "}"}], ",", "Nothing"}], "]"}]}], 
             "}"}], "]"}], " ", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
             "This", " ", "control", " ", "superseeds", " ", "the", " ", 
              "previous", " ", "one"}], ",", " ", 
             RowBox[{
              RowBox[{
              "leading", " ", "to", " ", "propagate", " ", "to", " ", "low"}],
               "-", "link"}]}], " ", "*)"}], "\[IndentingNewLine]", ",", 
           RowBox[{"MakeNode", "[", 
            RowBox[{"{", 
             RowBox[{"var", ",", 
              RowBox[{"SubBuild", "[", 
               RowBox[{
                RowBox[{"formula", "/.", 
                 RowBox[{"var", "\[Rule]", "False"}]}], ",", 
                RowBox[{"{", "varrest", "}"}], ",", "curtarget"}], "]"}], ",", 
              RowBox[{"SubBuild", "[", 
               RowBox[{
                RowBox[{"formula", "/.", 
                 RowBox[{"var", "\[Rule]", "True"}]}], ",", 
                RowBox[{"{", "varrest", "}"}], ",", "Nothing"}], "]"}]}], 
             "}"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "if", " ", "it", " ", "is", " ", "not", " ", "a", " ", "control", 
          " ", "then", " ", "the", " ", "former", " ", "context", " ", "is", 
          " ", "propagated"}], " ", "*)"}], "\[IndentingNewLine]", ",", 
        RowBox[{"MakeNode", "[", 
         RowBox[{"{", 
          RowBox[{"var", ",", 
           RowBox[{"SubBuild", "[", 
            RowBox[{
             RowBox[{"formula", "/.", 
              RowBox[{"var", "\[Rule]", "False"}]}], ",", 
             RowBox[{"{", "varrest", "}"}], ",", "target"}], "]"}], ",", 
           RowBox[{"SubBuild", "[", 
            RowBox[{
             RowBox[{"formula", "/.", 
              RowBox[{"var", "\[Rule]", "True"}]}], ",", 
             RowBox[{"{", "varrest", "}"}], ",", "target"}], "]"}]}], "}"}], 
         "]"}]}], "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"--", "  ", "main"}], " ", 
       RowBox[{"program", " ", "--"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"$BDDNODE", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"BDD", "[", 
      RowBox[{
       RowBox[{"SubBuild", "[", 
        RowBox[{"f", ",", "orderedvar", ",", "Nothing"}], "]"}], ",", "bdd"}],
       "]"}]}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "the", " ", "root", " ", "is", " ", "always", " ", "the", " ", "last", " ",
     "generated", " ", "node"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.729235312181639*^9, {3.729235632513802*^9, 3.729235637615011*^9}, {
   3.7292365233377666`*^9, 3.7292365236965675`*^9}, {3.7292486881965656`*^9, 
   3.729248689101367*^9}, {3.7292487230002265`*^9, 3.729248740784258*^9}, {
   3.7292487747923174`*^9, 3.729248782810732*^9}, {3.7292488441656394`*^9, 
   3.7292488446336403`*^9}, {3.729430788493761*^9, 3.729430806730193*^9}, {
   3.7295103111274495`*^9, 3.729510323794672*^9}, {3.7295153813774023`*^9, 
   3.729515390799819*^9}, {3.7295155080480256`*^9, 3.729515533966672*^9}, {
   3.729515825661786*^9, 3.7295158360358043`*^9}, {3.729516435414061*^9, 
   3.7295164440906763`*^9}, {3.729516720395965*^9, 3.7295167541232243`*^9}, {
   3.729519333460973*^9, 3.7295193468769965`*^9}, {3.7295195634977784`*^9, 
   3.7295195767608023`*^9}, {3.729520076018281*^9, 3.729520117137354*^9}, {
   3.7295832148946533`*^9, 3.72958329100576*^9}, {3.7295833570358524`*^9, 
   3.7295834324399586`*^9}, {3.729583518054079*^9, 3.72958351867408*^9}, {
   3.7295835656261454`*^9, 3.7295840112577705`*^9}, {3.7295840432788153`*^9, 
   3.7295841641079855`*^9}, {3.7295842038990407`*^9, 
   3.7295842302000775`*^9}, {3.7295843015561895`*^9, 3.729584480555444*^9}, {
   3.7295845306065135`*^9, 3.7295845311765146`*^9}, {3.7295845745455756`*^9, 
   3.729584611786628*^9}, {3.729584787834875*^9, 3.729584870937991*^9}, {
   3.7295849304100747`*^9, 3.7295849310500755`*^9}, {3.7295852986895905`*^9, 
   3.7295853275996313`*^9}, {3.7295853669796867`*^9, 
   3.7295854204817615`*^9}, {3.7295854529978075`*^9, 3.729585471747834*^9}, {
   3.7295855641540565`*^9, 3.7295856805672197`*^9}, {3.729585776380354*^9, 
   3.729585808352399*^9}, {3.7295859308875704`*^9, 3.7295859915596557`*^9}, {
   3.7295861389068623`*^9, 3.7295861746879125`*^9}, {3.7295863334501348`*^9, 
   3.729586369850186*^9}, 3.7295864664523325`*^9, 3.7295865526384535`*^9, {
   3.7295865993105187`*^9, 3.7295866892736444`*^9}, {3.7295867200056877`*^9, 
   3.729586731925705*^9}, {3.7295867932387905`*^9, 3.7295869353439903`*^9}, {
   3.7295870081160917`*^9, 3.7295870155471025`*^9}, {3.729587060229165*^9, 
   3.72958706373917*^9}, {3.7295871227802525`*^9, 3.729587124930256*^9}, {
   3.729587155742299*^9, 3.7295872607064457`*^9}, {3.7295872938484926`*^9, 
   3.729587295948496*^9}, {3.729587330369544*^9, 3.729587347780568*^9}, {
   3.729587405213649*^9, 3.729587425424677*^9}, {3.7295876875401077`*^9, 
   3.7295877867542467`*^9}, {3.729587831366309*^9, 3.729587832546311*^9}, {
   3.7295878708673644`*^9, 3.729588027072583*^9}, {3.7295881832588024`*^9, 
   3.7295881869188075`*^9}, {3.7295929177400827`*^9, 
   3.7295929303501005`*^9}, {3.7295934197407866`*^9, 
   3.7295934481418266`*^9}, {3.7295935553149767`*^9, 
   3.7295935810850124`*^9}, {3.729593888105443*^9, 3.7295938926764493`*^9}, {
   3.729593988531584*^9, 3.7295940440036616`*^9}, 3.729610763028247*^9, {
   3.7296617977248354`*^9, 3.7296618160600753`*^9}, {3.7296618545740967`*^9, 
   3.7296618736396675`*^9}, {3.729661931689694*^9, 3.7296620035221987`*^9}, {
   3.729666256965362*^9, 3.729666268214287*^9}, 3.7296665666684246`*^9, {
   3.7296777525538673`*^9, 3.729677799897678*^9}, {3.7296992748625154`*^9, 
   3.729699289459853*^9}, {3.729706438011531*^9, 3.7297064779185176`*^9}, {
   3.7297065248944454`*^9, 3.7297065812604713`*^9}, {3.7297078650374966`*^9, 
   3.729707884071426*^9}, {3.7297085631515474`*^9, 3.729708631524994*^9}, {
   3.7297183724756427`*^9, 3.729718374841895*^9}, {3.729718425259614*^9, 
   3.7297184287296314`*^9}, {3.729748965378149*^9, 3.729749017210983*^9}, {
   3.7297490771422696`*^9, 3.729749095235133*^9}, {3.7297568157667565`*^9, 
   3.7297568273659678`*^9}, {3.7297579538566923`*^9, 
   3.7297580229357643`*^9}, {3.7297693078386197`*^9, 3.729769328137227*^9}, {
   3.7297693724200187`*^9, 3.7297693724240217`*^9}, {3.7298302293392506`*^9, 
   3.729830271924326*^9}, {3.7312287038350916`*^9, 3.731228708298953*^9}, {
   3.731228760071836*^9, 3.7312287682954583`*^9}, {3.731228824088049*^9, 
   3.7312288250033555`*^9}, {3.731228860203472*^9, 3.7312288686837893`*^9}, {
   3.731228912268483*^9, 3.731228938621316*^9}, 3.7312578917301035`*^9, {
   3.731263501800151*^9, 3.7312635022614803`*^9}, {3.731263594613683*^9, 
   3.731263597668826*^9}, {3.7312636579884033`*^9, 3.7312637158442416`*^9}, 
   3.731263832197743*^9, {3.731291510994829*^9, 3.7312915257502966`*^9}, {
   3.7320249234538918`*^9, 3.73202506566564*^9}, 3.7320260590703945`*^9, {
   3.732026108572461*^9, 3.7320261841239815`*^9}, {3.732028100802986*^9, 
   3.732028123829363*^9}, {3.7320301867227125`*^9, 3.7320301869705095`*^9}, {
   3.732076704308156*^9, 3.7320767098480988`*^9}, {3.732094226242011*^9, 
   3.732094244342723*^9}, {3.7321742349453754`*^9, 3.7321742605945435`*^9}, {
   3.732388571790247*^9, 3.7323885763744607`*^9}, 3.7327358639653506`*^9, {
   3.7327371360396576`*^9, 3.732737157573996*^9}, {3.7328475506620507`*^9, 
   3.7328475607428484`*^9}, 3.732880337523235*^9, {3.732888466967841*^9, 
   3.7328884678494782`*^9}, {3.7328968934119167`*^9, 3.732896905805587*^9}, 
   3.732896953809472*^9, 3.732898084932152*^9, {3.7329473312935824`*^9, 
   3.732947637031209*^9}, {3.7329482924487257`*^9, 3.732948329704095*^9}, {
   3.7329486410154357`*^9, 3.7329486589451065`*^9}, {3.732948698930376*^9, 
   3.7329487025349407`*^9}, {3.7329488907339897`*^9, 
   3.7329490636532044`*^9}, {3.7329491039847336`*^9, 3.732949112511745*^9}, {
   3.732949156103595*^9, 3.73294915874146*^9}, {3.7329498831700172`*^9, 
   3.7329498840946712`*^9}, {3.7329502080154295`*^9, 3.732950208869033*^9}, {
   3.7329503548454895`*^9, 3.7329504967537527`*^9}, {3.732950702757571*^9, 
   3.732950887860985*^9}, {3.7329510196068425`*^9, 3.7329510389911427`*^9}, {
   3.732951789372187*^9, 3.732951837380717*^9}, {3.7329520620014067`*^9, 
   3.732952186394288*^9}, {3.7329522413112392`*^9, 3.7329523091842737`*^9}, {
   3.732952433828976*^9, 3.732952568303132*^9}, {3.732952605717182*^9, 
   3.7329526274101925`*^9}, 3.732952697385177*^9, {3.7329528894619603`*^9, 
   3.7329528965017953`*^9}, {3.732952983238927*^9, 3.7329530019411383`*^9}, 
   3.73295306346025*^9, {3.7329532271904945`*^9, 3.7329534740753813`*^9}, {
   3.732953540735584*^9, 3.732953584894577*^9}, {3.732953690869099*^9, 
   3.732953710079649*^9}, {3.7329537461621895`*^9, 3.732953763604489*^9}, 
   3.7329542094849014`*^9, {3.7329544389292083`*^9, 3.7329545071614466`*^9}, {
   3.732954538132321*^9, 3.732954751089863*^9}, {3.7329547857103615`*^9, 
   3.7329547935278735`*^9}, {3.7329548388639135`*^9, 3.732954864239863*^9}, {
   3.7329549642685804`*^9, 3.7329549720390954`*^9}, {3.732955064520466*^9, 
   3.732955073847069*^9}, {3.732968863912922*^9, 3.7329690868381205`*^9}, {
   3.732969119542778*^9, 3.7329691583613276`*^9}, {3.7329692100581503`*^9, 
   3.7329692102243*^9}, {3.7329694020534916`*^9, 3.7329694044773607`*^9}, {
   3.7329696189364676`*^9, 3.7329696651523805`*^9}, {3.7329773725598354`*^9, 
   3.732977607037303*^9}, 3.7329777497551394`*^9, {3.732984229175484*^9, 
   3.7329842538299026`*^9}, {3.7329842911202707`*^9, 
   3.7329843043726625`*^9}, {3.733289613163542*^9, 3.733289890978438*^9}, {
   3.7332902442524977`*^9, 3.7332902490466127`*^9}, {3.7332904280024104`*^9, 
   3.7332904311707706`*^9}, 3.733290622471447*^9, {3.733290673983816*^9, 
   3.733290725662115*^9}, {3.7332907682977943`*^9, 3.733290781517906*^9}, {
   3.7332908232504754`*^9, 3.73329083699168*^9}, {3.7332913983273115`*^9, 
   3.733291402884688*^9}, {3.7332920413016324`*^9, 3.733292079382053*^9}, {
   3.733300989705865*^9, 3.7333010003807096`*^9}, {3.733302788794773*^9, 
   3.7333027931268578`*^9}, {3.7358277092279935`*^9, 3.735827714849987*^9}, 
   3.737872644359439*^9},
 CellLabel->
  "In[111]:=",ExpressionUUID->"225eb09f-4be9-4af0-a16f-2680445da46f"],

Cell[BoxData["\<\"BDDBuildForDestify[f, variable order list, ctrlq] build a \
BDD from a formula f dedicated to Destify. ctrlq is a predicate on variable \
determining whether a variable is a control. A control must be  followed by \
its opposite in the variable order without other control in between to get an \
optimized BDD.\"\>"], "Output",
 CellChangeTimes->{
  3.7381469022576027`*^9, {3.7381470439929647`*^9, 3.738147072636352*^9}, 
   3.738152556821715*^9, 3.7381626461754313`*^9, 3.738162705165415*^9, 
   3.738162755069584*^9, 3.738162796181356*^9, 3.738162838936224*^9, 
   3.7381834164050465`*^9, 3.7382291171141233`*^9, 3.73826354167674*^9, 
   3.7383217612115455`*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"1e2242b1-f567-456d-a44d-8c899fe0b63e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Core computation", "Subsection",
 CellChangeTimes->{{3.7327841891972384`*^9, 
  3.7327842020607595`*^9}},ExpressionUUID->"7d75d154-de7f-4bd6-8b57-\
9e866e6896a7"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "BDDCore", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDDCore", "[", 
   RowBox[{
    RowBox[{"thebdd", ":", 
     RowBox[{"BDD", "[", 
      RowBox[{"root_", ",", "bdd_"}], "]"}]}], ",", "orderedvar_", ",", 
    "ctrlq_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"--", 
         RowBox[{"-", " ", "Structure"}]}], " ", "for", " ", 
        RowBox[{"InnerAnd", "  ", "--"}]}], "-"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"bddforand", "=", "bdd"}], ",", 
      RowBox[{"(*", " ", 
       RowBox[{
       "association", " ", "used", " ", "for", " ", "storing", " ", "nodes"}],
        " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"bddinvertedforand", " ", "=", " ", 
       RowBox[{"Association", "@", 
        RowBox[{"KeyValueMap", "[", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"key", ",", "desc"}], "}"}], ",", " ", 
            RowBox[{"desc", "\[Rule]", "key"}]}], "]"}], ",", "bdd"}], 
         "]"}]}]}], ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"inverted", " ", "association", " ", "of", " ", "bddforand"}],
         ","}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"rootref", "=", "root"}], ",", 
      RowBox[{"(*", " ", 
       RowBox[{"root", " ", "used", " ", "for", " ", "Inner", " ", "And"}], 
       " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"--", 
          RowBox[{"-", "  ", "Core"}]}], " ", "variables", " ", "and", " ", 
         RowBox[{"functions", "  ", "--"}]}], "-"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"nodecounter", "=", "1"}], ",", 
      RowBox[{"(*", " ", 
       RowBox[{"counter", " ", "for", " ", "numbering", " ", "node"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ts", "=", 
       RowBox[{"<|", " ", "|>"}]}], ",", "  ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Node", " ", "set", " ", "definition", " ", "0", " ", "and", " ", "1", 
        " ", "are", " ", "assumed", " ", "to", " ", "be", " ", "implicitely", 
        " ", "defined"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"invertedts", "=", 
       RowBox[{"<|", "|>"}]}], ",", 
      RowBox[{"(*", 
       RowBox[{
       "Inverted", " ", "ts", " ", "to", " ", "fastly", " ", "find", " ", 
        "the", " ", "key", " ", "associated", " ", "to", " ", "a", " ", 
        "descriptor", " ", "if", " ", "it", " ", "already", " ", "exists"}], 
       " ", "*)"}], "\[IndentingNewLine]", "addnode", ",", 
      "\[IndentingNewLine]", "SubCore"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "add", " ", "node", " ", "in", " ", "the", " ", "structure", " ", "and", 
      " ", "returns", " ", "the", " ", "node", " ", "number"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"addnode", "[", "desc_List", "]"}], ":=", 
      RowBox[{"(", 
       RowBox[{"Lookup", "[", 
        RowBox[{"invertedts", ",", 
         RowBox[{"Key", "[", "desc", "]"}], ",", 
         RowBox[{
          RowBox[{"AssociateTo", "[", 
           RowBox[{"ts", ",", " ", 
            RowBox[{
             RowBox[{"++", "nodecounter"}], "\[Rule]", " ", "desc"}]}], "]"}],
           ";", 
          RowBox[{"AssociateTo", "[", 
           RowBox[{"invertedts", ",", 
            RowBox[{"desc", "\[Rule]", " ", "nodecounter"}]}], "]"}], ";", 
          RowBox[{"$TSNODE", "=", " ", "nodecounter"}]}]}], "]"}], ")"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
        "Builds", " ", "the", " ", "nodes", " ", "of", " ", "the", " ", "set",
          " ", "structure"}], " ", "-", " ", 
        RowBox[{"input", ":", " ", 
         RowBox[{"a", " ", "BDD"}]}]}], ",", " ", 
       RowBox[{"output", ":", " ", 
        RowBox[{"a", " ", "node", " ", "number"}]}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SubCore", "[", 
       RowBox[{"BDD", "[", 
        RowBox[{"0", ",", "_"}], "]"}], "]"}], ":=", "0"}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SubCore", "[", 
       RowBox[{"BDD", "[", 
        RowBox[{"1", ",", "_"}], "]"}], "]"}], ":=", "1"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SubCore", "[", 
       RowBox[{"BDD", "[", 
        RowBox[{"aroot_", ",", "assoc_"}], "]"}], "]"}], ":=", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"desc", "=", 
          RowBox[{"FindNode", "[", 
           RowBox[{"assoc", ",", "aroot"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"bddlow", "=", 
             RowBox[{"BDD", "[", 
              RowBox[{
               RowBox[{"desc", "[", 
                RowBox[{"[", "LOW", "]"}], "]"}], ",", "assoc"}], "]"}]}], 
            ",", 
            RowBox[{"bddhigh", "=", 
             RowBox[{"BDD", "[", 
              RowBox[{
               RowBox[{"desc", "[", 
                RowBox[{"[", "HIGH", "]"}], "]"}], ",", "assoc"}], "]"}]}], 
            ",", 
            RowBox[{"var", "=", 
             RowBox[{"desc", "[", 
              RowBox[{"[", "VAR", "]"}], "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"ctrlq", "[", "var", "]"}]}], ",", "1", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"bddlowhigh", "=", 
                RowBox[{"BDDInnerAnd", "[", 
                 RowBox[{
                 "bddforand", ",", "bddinvertedforand", ",", " ", "rootref", 
                  ",", 
                  RowBox[{"desc", "[", 
                   RowBox[{"[", "LOW", "]"}], "]"}], ",", 
                  RowBox[{"desc", "[", 
                   RowBox[{"[", "HIGH", "]"}], "]"}], ",", "orderedvar"}], 
                 "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"With", "[", " ", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"low", "=", 
                   RowBox[{"SubCore", "[", "bddlow", "]"}]}], ",", 
                  RowBox[{"high", "=", 
                   RowBox[{"SubCore", "[", "bddhigh", "]"}]}], ",", 
                  RowBox[{"lowhigh", "=", 
                   RowBox[{"SubCore", "[", "bddlowhigh", "]"}]}]}], "}"}], 
                ",", "\[IndentingNewLine]", " ", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "Treatment", " ", "of", " ", "the", " ", "different", " ", 
                  "cases"}], " ", "*)"}], "\[IndentingNewLine]", 
                RowBox[{"Switch", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"low", "\[Equal]", "lowhigh"}], ",", 
                    RowBox[{"high", "\[Equal]", "lowhigh"}]}], "}"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}], ",", " ", 
                  RowBox[{"addnode", "[", 
                   RowBox[{"{", 
                    RowBox[{"var", ",", "0", ",", "0", ",", "lowhigh"}], 
                    "}"}], "]"}], "                ", 
                  RowBox[{"(*", " ", 
                   RowBox[{"Low", " ", "=", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Low", " ", "\[And]", " ", "High"}], ")"}], " ", 
                    "=", " ", "High"}]}], " ", "*)"}], "\[IndentingNewLine]", 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"True", ",", "False"}], "}"}], ",", " ", 
                  RowBox[{"addnode", "[", 
                   RowBox[{"{", 
                    RowBox[{"var", ",", "0", ",", "high", ",", "lowhigh"}], 
                    "}"}], "]"}], "       ", 
                  RowBox[{"(*", " ", 
                   RowBox[{"Low", " ", "=", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Low", " ", "\[And]", " ", "High"}], ")"}], " ", 
                    "\[NotEqual]", " ", "High"}]}], " ", "*)"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}], ",", " ", 
                  RowBox[{"addnode", "[", 
                   RowBox[{"{", 
                    RowBox[{"var", ",", "low", ",", "0", ",", "lowhigh"}], 
                    "}"}], "]"}], "         ", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                    RowBox[{"Low", " ", "\[NotEqual]", " ", 
                    RowBox[{"(", 
                    RowBox[{"Low", " ", "\[And]", " ", "High"}], ")"}]}], " ",
                     "=", " ", "High"}], " ", "*)"}], "\[IndentingNewLine]", 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "False"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"BreakNonePath", "[", 
                    RowBox[{"ts", ",", "low", ",", "lowhigh"}], "]"}], ";", 
                   RowBox[{"BreakNonePath", "[", 
                    RowBox[{"ts", ",", "high", ",", "lowhigh"}], "]"}], ";", 
                   " ", 
                   RowBox[{"addnode", "[", 
                    RowBox[{"{", 
                    RowBox[{"var", ",", "low", ",", "high", ",", "lowhigh"}], 
                    "}"}], "]"}]}]}], 
                 RowBox[{"(*", " ", 
                  RowBox[{"Low", " ", "\[NotEqual]", " ", 
                   RowBox[{"(", 
                    RowBox[{"Low", " ", "\[And]", " ", "High"}], ")"}], " ", 
                   "\[NotEqual]", "  ", "High"}], "*)"}], " ", 
                 "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
               "]"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
         RowBox[{"(*", " ", 
          RowBox[{"end", " ", "if"}], "*)"}], "\[IndentingNewLine]", "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"--", "  ", "main"}], " ", 
       RowBox[{"program", " ", "--"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"$TSNODE", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"TermsSet", "[", 
      RowBox[{
       RowBox[{"SubCore", "[", "thebdd", "]"}], ",", "ts"}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{
  3.731916303293954*^9, {3.7319163343224087`*^9, 3.7319163822768927`*^9}, {
   3.731916473677453*^9, 3.73191647751506*^9}, 3.731921385259865*^9, 
   3.731921451811181*^9, {3.731921671521967*^9, 3.7319216726607695`*^9}, {
   3.731921808677408*^9, 3.7319218797043333`*^9}, {3.7319309368866053`*^9, 
   3.7319309547496157`*^9}, {3.7319309928601866`*^9, 
   3.7319310229865465`*^9}, {3.731931796720731*^9, 3.7319317972468424`*^9}, {
   3.7319318305351577`*^9, 3.731931831402643*^9}, {3.7319320649925165`*^9, 
   3.731932121850515*^9}, {3.7319321683154554`*^9, 3.7319321743588285`*^9}, {
   3.7319323026311035`*^9, 3.731932367611668*^9}, {3.7319324886524673`*^9, 
   3.73193268009057*^9}, {3.731932762706671*^9, 3.7319327986892986`*^9}, {
   3.7319328323617067`*^9, 3.7319328550831785`*^9}, {3.73193290027966*^9, 
   3.7319330272721043`*^9}, {3.731933066477682*^9, 3.731933138999364*^9}, {
   3.731933176717704*^9, 3.7319331775678844`*^9}, {3.7319335161204424`*^9, 
   3.731933525678471*^9}, {3.7319339324727736`*^9, 3.7319339690352263`*^9}, {
   3.7319340345322175`*^9, 3.7319340803366737`*^9}, {3.731934148034484*^9, 
   3.7319341610853853`*^9}, {3.731934234324007*^9, 3.731934288076745*^9}, {
   3.7319343687450686`*^9, 3.731934370427594*^9}, {3.7319344237252197`*^9, 
   3.7319345099693713`*^9}, {3.731934540526898*^9, 3.731934753502182*^9}, {
   3.7319348013473997`*^9, 3.731934803258686*^9}, {3.7319348624446816`*^9, 
   3.7319348687362347`*^9}, 3.7319349157437425`*^9, 3.7319352240943155`*^9, {
   3.731935259705469*^9, 3.7319352675007935`*^9}, {3.731935423010455*^9, 
   3.731935484559125*^9}, {3.7319355359943795`*^9, 3.7319355642697287`*^9}, {
   3.7319359715932517`*^9, 3.731936088482876*^9}, {3.731936123904174*^9, 
   3.7319361372105074`*^9}, {3.7319362443213663`*^9, 3.731936273997899*^9}, {
   3.731936320724818*^9, 3.7319363756949143`*^9}, {3.731936786598621*^9, 
   3.731936827954184*^9}, {3.7319368594244013`*^9, 3.7319369102065744`*^9}, {
   3.7319369968414845`*^9, 3.731937003576083*^9}, {3.7319370526491747`*^9, 
   3.7319370623674593`*^9}, {3.7319371922443967`*^9, 
   3.7319371990063114`*^9}, {3.731937249784814*^9, 3.73193726460951*^9}, {
   3.7319373102930408`*^9, 3.7319373480797586`*^9}, {3.7319373803221054`*^9, 
   3.7319373936498113`*^9}, {3.731937549427656*^9, 3.7319375591201525`*^9}, {
   3.731937615159026*^9, 3.731937647486025*^9}, {3.7319376886624646`*^9, 
   3.73193783039789*^9}, {3.7319408140643144`*^9, 3.7319408956781445`*^9}, {
   3.7319409457686224`*^9, 3.731940969511444*^9}, {3.731941014506333*^9, 
   3.7319410511492915`*^9}, {3.73194108287175*^9, 3.731941090730341*^9}, {
   3.7319416131431847`*^9, 3.731941770060384*^9}, {3.7319419560881634`*^9, 
   3.7319420404369183`*^9}, {3.731942097462305*^9, 3.731942159333152*^9}, {
   3.731942258102118*^9, 3.731942286264061*^9}, {3.7319425212215195`*^9, 
   3.7319428874730005`*^9}, {3.731942933992955*^9, 3.731942956788086*^9}, {
   3.73194305524085*^9, 3.7319430807879333`*^9}, {3.7319431611848826`*^9, 
   3.731943184021059*^9}, {3.731943220097609*^9, 3.7319432840769324`*^9}, {
   3.731946095065631*^9, 3.7319461104293003`*^9}, {3.7319462057968135`*^9, 
   3.7319463062108603`*^9}, {3.7319463456918573`*^9, 
   3.7319463558550572`*^9}, {3.7319463957112923`*^9, 
   3.7319464155783663`*^9}, {3.7319464563542223`*^9, 
   3.7319464642268057`*^9}, {3.7319465909836273`*^9, 
   3.7319466139128714`*^9}, {3.7319466985197783`*^9, 3.731946709457559*^9}, {
   3.7319469697053347`*^9, 3.731946973485012*^9}, {3.7319470747034035`*^9, 
   3.731947080851756*^9}, {3.731947157867318*^9, 3.731947186007231*^9}, {
   3.7319472440984073`*^9, 3.7319472465591393`*^9}, {3.731947325080759*^9, 
   3.7319473309549074`*^9}, {3.731947487551875*^9, 3.7319474880262113`*^9}, {
   3.73194753244466*^9, 3.731947589865616*^9}, {3.7319476849229307`*^9, 
   3.7319477001026807`*^9}, {3.7319477362512875`*^9, 3.731947736897746*^9}, {
   3.7319478878997297`*^9, 3.731947909735189*^9}, {3.7319480281540995`*^9, 
   3.731948038884712*^9}, 3.731948222199559*^9, {3.7319488140458255`*^9, 
   3.7319488537359734`*^9}, {3.7319489554170065`*^9, 
   3.7319490651847687`*^9}, {3.731949685608964*^9, 3.7319497247262163`*^9}, {
   3.73194977636401*^9, 3.731949816950326*^9}, {3.7319498674771676`*^9, 
   3.7319499353407183`*^9}, {3.7319499732988844`*^9, 3.731949975260129*^9}, {
   3.7319502025261464`*^9, 3.731950411106658*^9}, {3.7319504413085437`*^9, 
   3.731950773283924*^9}, 3.7319508128643446`*^9, {3.7319509006853695`*^9, 
   3.731950924591426*^9}, 3.731950981596983*^9, {3.7319510138867226`*^9, 
   3.7319510964599695`*^9}, {3.731951137147295*^9, 3.731951169047364*^9}, {
   3.731959458331766*^9, 3.7319597456037426`*^9}, {3.731959932148988*^9, 
   3.731959935171976*^9}, {3.7319600697160625`*^9, 3.731960071936218*^9}, {
   3.7319601083108253`*^9, 3.731960146438414*^9}, 3.7319601928018064`*^9, {
   3.7319602522498155`*^9, 3.7319602537508945`*^9}, {3.73196030940948*^9, 
   3.7319603593704967`*^9}, {3.7319603896619554`*^9, 3.731960465593589*^9}, {
   3.731960543491312*^9, 3.7319605838265963`*^9}, {3.7319606590276937`*^9, 
   3.731960811492056*^9}, {3.7319609610123825`*^9, 3.7319611713298025`*^9}, {
   3.731961207938633*^9, 3.7319612263864145`*^9}, {3.7319613067926316`*^9, 
   3.731961324531865*^9}, {3.731961406228094*^9, 3.731961413842574*^9}, {
   3.73196151136285*^9, 3.731961535329766*^9}, {3.731961739556796*^9, 
   3.731961752737137*^9}, {3.7319618415712385`*^9, 3.7319620131765203`*^9}, {
   3.731962111987396*^9, 3.731962149985118*^9}, {3.7319622094738264`*^9, 
   3.731962241054954*^9}, {3.731962298978651*^9, 3.7319623138680396`*^9}, {
   3.7319623472182865`*^9, 3.731962402171936*^9}, {3.7319624646217113`*^9, 
   3.7319624673731422`*^9}, {3.7319625138760586`*^9, 
   3.7319625159199877`*^9}, {3.731962557901887*^9, 3.7319625621558228`*^9}, {
   3.731962619440934*^9, 3.731962621735403*^9}, {3.7320064008558245`*^9, 
   3.732006402825863*^9}, {3.7320074719601116`*^9, 3.7320074846330013`*^9}, {
   3.732007729318469*^9, 3.732007746165288*^9}, {3.7320087464861994`*^9, 
   3.7320090469990816`*^9}, {3.732009078841055*^9, 3.7320091071900196`*^9}, 
   3.7320091923629603`*^9, {3.7320092391264052`*^9, 3.732009426583596*^9}, {
   3.732009479159055*^9, 3.732009494216646*^9}, {3.732009652554267*^9, 
   3.7320096559123325`*^9}, {3.7320097145535197`*^9, 
   3.7320098354462333`*^9}, {3.7320098871163034`*^9, 
   3.7320099097041807`*^9}, {3.7320101857843227`*^9, 
   3.7320102079954615`*^9}, {3.7320106725999274`*^9, 3.732010693158865*^9}, 
   3.732010739753765*^9, {3.732021731546414*^9, 3.732021732216879*^9}, {
   3.732021787716049*^9, 3.7320217877390656`*^9}, {3.73202282456406*^9, 
   3.732022826834685*^9}, {3.7320282079296007`*^9, 3.7320282667974224`*^9}, {
   3.732028731833479*^9, 3.7320287474486957`*^9}, {3.7320287898783207`*^9, 
   3.732028800938508*^9}, {3.732030262940854*^9, 3.7320302746774654`*^9}, {
   3.7320303978393936`*^9, 3.7320304481521883`*^9}, {3.7320305371401787`*^9, 
   3.73203057364453*^9}, {3.732031118650064*^9, 3.732031246666179*^9}, {
   3.7320313230418625`*^9, 3.732031351328046*^9}, {3.732038428950364*^9, 
   3.732038705164648*^9}, {3.732038749460345*^9, 3.732038755200597*^9}, {
   3.732041969474436*^9, 3.7320419750002766`*^9}, {3.7320627746736193`*^9, 
   3.7320627816325445`*^9}, {3.732062879518857*^9, 3.732062942110188*^9}, {
   3.732062980144105*^9, 3.7320629806544666`*^9}, {3.732077158589815*^9, 
   3.7320772298322625`*^9}, 3.73207844881437*^9, {3.7320828137003913`*^9, 
   3.7320828149843025`*^9}, {3.7320945821525016`*^9, 
   3.7320946258943686`*^9}, {3.7320946984548206`*^9, 3.732094708295641*^9}, 
   3.7322034005519176`*^9, {3.7322064721995697`*^9, 3.7322064727464633`*^9}, {
   3.732223113505184*^9, 3.7322231142407045`*^9}, {3.7322236410415487`*^9, 
   3.732223642317419*^9}, {3.732223872356312*^9, 3.732223883807408*^9}, 
   3.7322241847181816`*^9, {3.7322813165585036`*^9, 3.732281431659831*^9}, {
   3.732281534089808*^9, 3.732281546843986*^9}, {3.7322822428880434`*^9, 
   3.732282337751563*^9}, {3.7322826769583893`*^9, 3.7322827325365953`*^9}, {
   3.7322827955642695`*^9, 3.7322828568556213`*^9}, {3.7322829291970744`*^9, 
   3.7322829420733843`*^9}, {3.7322830559479294`*^9, 3.7322830594614906`*^9}, 
   3.7322832844777584`*^9, {3.7322851504140644`*^9, 3.73228515042969*^9}, {
   3.7326994859335337`*^9, 3.732699500915693*^9}, {3.7326998247126923`*^9, 
   3.7326999221197495`*^9}, {3.7327109887410097`*^9, 3.732711061044126*^9}, {
   3.73278422451696*^9, 3.7327843339937963`*^9}, {3.732784371744517*^9, 
   3.732784555552498*^9}, {3.7327846125577836`*^9, 3.7327847887113433`*^9}, {
   3.732785519221074*^9, 3.732785535311448*^9}, {3.732785592249736*^9, 
   3.7327859987541094`*^9}, {3.732786054550564*^9, 3.732786057183409*^9}, {
   3.732786108279544*^9, 3.732786110654209*^9}, {3.732786272294515*^9, 
   3.732786272947977*^9}, {3.73278635922097*^9, 3.7327863799015894`*^9}, {
   3.7327866721491966`*^9, 3.7327867192725105`*^9}, {3.7327881920602674`*^9, 
   3.7327882199359627`*^9}, 3.7327948815654593`*^9, {3.7327956029249964`*^9, 
   3.7327956178645535`*^9}, {3.732796964514989*^9, 3.7327969650743904`*^9}, {
   3.7327970637911916`*^9, 3.732797159744009*^9}, {3.7327972616700673`*^9, 
   3.732797422063475*^9}, {3.7327975071986437`*^9, 3.7327975615581055`*^9}, 
   3.7327976562890773`*^9, {3.732797799312169*^9, 3.7327978405843472`*^9}, {
   3.7327979312314186`*^9, 3.732797939104005*^9}, {3.73288131177412*^9, 
   3.7328813380757313`*^9}, {3.7328816941971893`*^9, 
   3.7328817739654255`*^9}, {3.732882178051532*^9, 3.7328823002984037`*^9}, {
   3.732882432845257*^9, 3.732882476651275*^9}, {3.732882682071932*^9, 
   3.732882771658087*^9}, {3.7328831924489098`*^9, 3.7328831936815977`*^9}, {
   3.732883391604967*^9, 3.7328833972405343`*^9}, {3.732883991891839*^9, 
   3.732884064930915*^9}, {3.7328854510221314`*^9, 3.7328855138983326`*^9}, {
   3.7328856177632203`*^9, 3.732885767779038*^9}, {3.7328858029565144`*^9, 
   3.7328858171934166`*^9}, {3.732896316960189*^9, 3.7328963208309374`*^9}, {
   3.732896687432266*^9, 3.7328966874472756`*^9}, {3.7328986843647785`*^9, 
   3.7328986843707886`*^9}, {3.732944709391589*^9, 3.7329447093945913`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"c7573efb-f4f9-41d2-8559-9a526cf9cf84"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Destify", "Subsection",
 CellChangeTimes->{{3.732023264367628*^9, 3.7320232792812243`*^9}, {
   3.732063098075128*^9, 3.732063104475103*^9}, {3.732354085427085*^9, 
   3.7323540980007067`*^9}, {3.732784507281364*^9, 3.732784537989061*^9}, 
   3.732785519267104*^9, {3.732794745590331*^9, 3.7327947537020655`*^9}, {
   3.73288010468909*^9, 
   3.7328801101124663`*^9}},ExpressionUUID->"7cb0e7fd-0f39-4416-881d-\
13e660975ebc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Options", "[", "BDDestify", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ControlType", "->", " ", "ControlDefinition"}], ",", " ", 
    RowBox[{"BaseStyle", "->", " ", "\"\<Action\>\""}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"BDDestify", "[", 
   RowBox[{
    RowBox[{"F", ":", "BooN"}], ",", "necessarily_", ",", "possibly_", " ", 
    ",", "freezingfalse_List", ",", "freezingtrue_List", ",", "ordervar_", 
    ",", " ", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", " ", "\n", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", " ", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{"Specification", " ", "of", " ", "the", " ", "problem"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ctrlspec", "=", 
       RowBox[{
        RowBox[{"CtrlSpec", "[", 
         RowBox[{
         "F", ",", "necessarily", ",", "possibly", ",", "freezingfalse", ",", 
          "freezingtrue", ",", " ", 
          RowBox[{"ControlType", "->", " ", 
           RowBox[{"OptionValue", "[", "ControlType", "]"}]}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Definition", " ", "of", " ", "the", " ", "predicate", " ", "checking",
         " ", "whether", " ", "a", " ", "variable", " ", "is", " ", "a", " ", 
        "control", " ", "parameter"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ctrlq", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "ControlType", "]"}], " ", 
         "\[IndentingNewLine]", ",", "ControlDefinition", ",", "CtrlDefQ", 
         "\[IndentingNewLine]", ",", "ControlUse", ",", "CtrlUseQ", 
         "\[IndentingNewLine]", ",", "ControlAll", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"CtrlDefQ", "[", "#", "]"}], " ", "\[Or]", " ", 
            RowBox[{"CtrlUseQ", "[", "#", "]"}]}], ")"}], "&"}], 
         "\[IndentingNewLine]", ",", "_", ",", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"Destify", "::", "opts"}], ",", 
            RowBox[{"OptionValue", "[", "ControlType", "]"}], ",", 
            "ControlType"}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], " ", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", " ", "\n", 
    RowBox[{"(*", " ", 
     RowBox[{"Core", " ", "solving"}], " ", "*)"}], "  ", "\n", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"allcores", "=", " ", 
        RowBox[{"BDDCore", "[", 
         RowBox[{
          RowBox[{"$BDD", "=", 
           RowBox[{"BDDBuildForDestify", "[", " ", 
            RowBox[{"ctrlspec", ",", " ", "ordervar", ",", "ctrlq"}], "]"}]}],
           ",", "ordervar", ",", "ctrlq"}], "]"}]}], "}"}], ",", " ", "\n", 
      RowBox[{"Switch", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "BaseStyle", "]"}], "\[IndentingNewLine]",
         ",", "\"\<Parameter\>\"", ",", "allcores", "\[IndentingNewLine]", 
        ",", "\"\<Action\>\"", ",", " ", 
        RowBox[{"CtrlToAction", "@", 
         RowBox[{"PrimeSets", "@", 
          RowBox[{"TSNegativeVariables", "[", "allcores", "]"}]}]}], 
        "\[IndentingNewLine]", ",", "_", ",", " ", "allcores"}], " ", 
       RowBox[{"(*", " ", 
        RowBox[{"Option", " ", "error"}], " ", "*)"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7327926863567677`*^9, 3.7327927160908155`*^9}, {
   3.73279382207646*^9, 3.7327939274699683`*^9}, {3.732793965897117*^9, 
   3.732793965950155*^9}, {3.732794046314987*^9, 3.7327941393397493`*^9}, {
   3.732794179512159*^9, 3.732794236034111*^9}, 3.732794277499426*^9, {
   3.732794315787476*^9, 3.7327943822164564`*^9}, {3.732794961177741*^9, 
   3.7327949637345486`*^9}, {3.7327956988588023`*^9, 3.732795700662077*^9}, {
   3.7327976663792105`*^9, 3.7327976680033593`*^9}, {3.732803666447329*^9, 
   3.7328036825894003`*^9}, {3.7328801511271276`*^9, 
   3.7328801566814384`*^9}, {3.7328848730191813`*^9, 
   3.7328848745469713`*^9}, {3.7328849116082726`*^9, 3.732884914647157*^9}, 
   3.7328884332149925`*^9, 3.7328889107786107`*^9, {3.7328965678005347`*^9, 
   3.732896590432523*^9}, 3.7328966212350645`*^9, {3.7328996545093317`*^9, 
   3.732899655637122*^9}, {3.7329476835981627`*^9, 3.732947696424197*^9}, 
   3.732949883202038*^9},
 CellLabel->
  "In[116]:=",ExpressionUUID->"76087edd-5962-4241-b377-dbff58fb52c4"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1254, 752},
WindowMargins->{{-1896, Automatic}, {Automatic, -37}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 156, 3, 67, "Section",ExpressionUUID->"de067407-d071-4b33-8446-68a6a65c2de7"],
Cell[739, 27, 167, 3, 34, "Text",ExpressionUUID->"42931878-d270-4fab-9f64-ea8212a1c072"],
Cell[909, 32, 369, 10, 28, "Input",ExpressionUUID->"fc69d44d-0919-4230-8bc5-778dcb22e925"],
Cell[1281, 44, 4196, 95, 181, "Input",ExpressionUUID->"7050d843-21df-4a6d-a286-9e32b6a15a74"],
Cell[CellGroupData[{
Cell[5502, 143, 220, 4, 53, "Subsection",ExpressionUUID->"8d2b797e-deae-4d94-8016-9f3d9be679f3"],
Cell[CellGroupData[{
Cell[5747, 151, 16598, 310, 770, "Input",ExpressionUUID->"225eb09f-4be9-4af0-a16f-2680445da46f"],
Cell[22348, 463, 766, 12, 52, "Output",ExpressionUUID->"1e2242b1-f567-456d-a44d-8c899fe0b63e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23163, 481, 168, 3, 53, "Subsection",ExpressionUUID->"7d75d154-de7f-4bd6-8b57-9e866e6896a7"],
Cell[23334, 486, 21233, 397, 846, "Input",ExpressionUUID->"c7573efb-f4f9-41d2-8559-9a526cf9cf84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44604, 888, 431, 7, 53, "Subsection",ExpressionUUID->"7cb0e7fd-0f39-4416-881d-13e660975ebc"],
Cell[45038, 897, 4491, 95, 371, "Input",ExpressionUUID->"76087edd-5962-4241-b377-dbff58fb52c4"]
}, Open  ]]
}, Open  ]]
}
]
*)

